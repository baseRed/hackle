在使用之前就需要确认其变量数据类型的称为静态语言
在运行过程中需要检查数据类型的语言称为动态语言

JavaScript 是动态语言

支持隐式类型转换的语言称为弱类型语言，不支持隐式类型转换的语言称为强类型语言

JavaScript数据类型
1. Boolean
2. Number
3. String
4. Null
5. Undefined
6. Object
7. Symbol
8. BigInt 任意精度表示整数，超出安全整数范围也可以存储和操作


JavaScript在执行过程中，主要有三种内存空间
代码空间、堆空间、栈空间

代码空间：存储可执行代码
栈空间：调用栈，存储执行上下文
JavaScript 引擎并不是直接将该对象存放到变量环境中，而是将它分配到堆空间里面，分配后该对象会有一
个在“堆”中的地址，然后再将该数据的地址写进 c 的变量值
对象类型是存放在堆空间的，在栈空间中只是保留了对象的引用地址，当 JavaScript 需要访问该数据的时候，
是通过栈中的引用地址来访问的

为什么不可以把所有数据放在栈中？
JavaScript 引擎需要用栈来维护程序执行期间上下文的状态，如果栈空间大了话，所有的数据都存放在栈空间里
面，那么会影响到上下文切换的效率，进而又影响到整个程序的执行效率

通常情况下，栈空间都不会设置太大，主要用来存放一些原始类型的小数据。而引用类型的数据占用的空间都比较
大，所以这一类数据会被存放到堆中，堆空间很大，能存放很多大的数据，不过缺点是分配内存和回收内存都会占用一定的时间

在 JavaScript 中，赋值操作和其他语言有很大的不同，原始类型的赋值会完整复制变量值，而引用类型的赋值是复制引用地址。